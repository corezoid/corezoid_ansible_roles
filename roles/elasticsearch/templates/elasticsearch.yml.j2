
##################### ElasticSearch Configuration Example #####################

# Any element in the configuration can be replaced with environment variables
# by placing them in ${...} notation. For example:

# node.rack: ${RACK_ENV_VAR}

################################### Cluster ###################################

cluster.name: users
#################################### Node #####################################

node.name: "{{ ansible_hostname }}"
node.master: "true"

#################################### Index ####################################

index.number_of_shards: "5"
index.number_of_replicas: "0"

#################################### Paths ####################################

path.conf: "/etc/{{ item }}"
path.data: ["{{ top_dir }}/{{ item }}/data"]
path.work: "{{ top_dir }}/{{ item }}/work"
path.logs: "/var/log/{{ item }}"
path.plugins: "{{ top_dir }}/{{ item }}/plugins"

#################################### Plugin ###################################

################################### Memory ####################################

bootstrap.mlockall: "true"

############################## Network And HTTP ###############################

http.port: "{{ elasticsearch_port }}"

http.cors.enabled: "true"
#transport.bind_host: "{{ ansible_default_ipv4.address }}"
#network.publish_host: "{{ ansible_default_ipv4.address }}"
network.bind_host: "0.0.0.0"
network.host: "localhost"
################################### Gateway ###################################

gateway.recover_after_nodes: "1"
gateway.expected_nodes: "1"

############################# Recovery Throttling #############################


################################## Discovery ##################################

#discovery.zen.minimum_master_nodes: "1"
#discovery.zen.ping.multicast.enabled: "false"
#discovery.zen.ping.unicast.hosts: "{{ elasticsearch.es_cluster_list }}"

################################## Slow Log ##################################

# Shard level query and fetch threshold logging.

index.search.slowlog.threshold.query.warn: 10s
index.search.slowlog.threshold.query.info: 5s
index.search.slowlog.threshold.query.debug: 2s
index.search.slowlog.threshold.query.trace: 500ms

index.search.slowlog.threshold.fetch.warn: 1s
index.search.slowlog.threshold.fetch.info: 800ms
index.search.slowlog.threshold.fetch.debug: 500ms
index.search.slowlog.threshold.fetch.trace: 200ms

index.indexing.slowlog.threshold.index.warn: 10s
index.indexing.slowlog.threshold.index.info: 5s
index.indexing.slowlog.threshold.index.debug: 2s
index.indexing.slowlog.threshold.index.trace: 500ms

################################## GC Logging ################################

monitor.jvm.gc.ParNew.warn: 1000ms
monitor.jvm.gc.ParNew.info: 700ms
monitor.jvm.gc.ParNew.debug: 400ms

monitor.jvm.gc.ConcurrentMarkSweep.warn: 10s
monitor.jvm.gc.ConcurrentMarkSweep.info: 5s
monitor.jvm.gc.ConcurrentMarkSweep.debug: 2s

################################ disk threshold #############################

cluster.routing.allocation.disk.threshold_enabled: "true"
cluster.routing.allocation.disk.watermark.low: "5g"
cluster.routing.allocation.disk.watermark.high: "1g"

####################### nodes initial shards count #########################

cluster.routing.allocation.node_initial_primaries_recoveries: "10"

####################### memory limits #########################

indices.fielddata.cache.size: "90%"


script.update: true
