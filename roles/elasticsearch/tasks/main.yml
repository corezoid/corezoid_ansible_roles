---
# Configure Elasticsearch repository
# Sets up the repository configuration for the specified Elasticsearch version
- name: Add Elasticsearch repo
  template:
    src: templates/{{ elasticsearch.version }}-elasticsearch.repo.j2
    dest: /etc/yum.repos.d/elasticsearch.repo
  tags:
    - elasticsearch-all
    - elasticsearch-install
    - elasticsearch-repo-install

# Clean YUM cache
# Ensures fresh package metadata for installation
- name: Yum clean all
  command: yum clean all
  tags:
    - elasticsearch-all
    - elasticsearch-install

# Install Java for Amazon Linux 2
# Sets up OpenJDK 11 using amazon-linux-extras
- name: Install Java
  shell: amazon-linux-extras install java-openjdk11 -y
  tags:
    - elasticsearch-all
    - elasticsearch-install
  when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2"

# Install Java for Amazon Linux 2023
# Sets up Java 11 using standard package manager
- name: Install Java AMI3
  shell: yum install java-11 -y
  tags:
    - elasticsearch-all
    - elasticsearch-install
  when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2023"

# Install Java for RedHat-based systems
# Sets up OpenJDK 11 for CentOS/RHEL/Oracle Linux
- name: Install Java
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "java-11-openjdk"
    - "java-11-openjdk-headless"
  tags:
    - elasticsearch-all
    - elasticsearch-install
  when:
    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "8"

# Configure crypto policies for CentOS 9
# Updates crypto policies to support required algorithms
- name: update-crypto-policies elasticsearch Centos 9
  shell: update-crypto-policies --set DEFAULT:SHA1
  when:
    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux"
    - ansible_distribution_major_version == "9"

# Install Elasticsearch package
# Installs the specified version of Elasticsearch from configured repository
- name: Install elasticsearch packages
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "elasticsearch*"
  with_items:
    - "elasticsearch-{{ elasticsearch.version }}.*"
  notify:
    - restart elasticsearch
  tags:
    - elasticsearch-all
    - elasticsearch-install

# Install Nginx web server
# Sets up Nginx for proxying Elasticsearch requests
- name: Install nginx packages
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "nginx"
  notify:
    - restart elasticsearch
  tags:
    - elasticsearch-all
    - elasticsearch-install

# Create main Elasticsearch directory
# Sets up the primary directory structure with proper permissions
- name: Creates main directory for Elasticsearch
  file:
    path: "{{ top_dir }}/{{ elasticsearch.es_main_dir }}"
    state: directory
    owner: "{{ elasticsearch.es_dir_owner }}"
    group: "{{ elasticsearch.es_dir_owner }}"
    mode: 0775
    recurse: yes
  tags:
    - elasticsearch-all
    - elasticsearch-install
    - elasticsearch-install-main-dir

# Generate Elasticsearch configuration
# Creates the main Elasticsearch configuration from template
- name: Create Elasticsearch Config
  template:
    src: "templates/{{ elasticsearch.version }}-{{ item }}.yml.j2"
    dest: "/etc/{{ item }}/{{ item }}.yml"
    owner: "{{ elasticsearch.es_dir_owner }}"
    group: "{{ elasticsearch.es_dir_owner }}"
    mode: 0750
  with_items:
    - elasticsearch
  tags:
    - elasticsearch-all
    - elasticsearch-install
  register: elasticsearch_conf_changed

# Creates the main Elasticsearch JVM options from template
- name: Configure JVM options
  template:
    src: templates/jvm.options.j2
    dest: /etc/elasticsearch/jvm.options
    owner: root
    group: elasticsearch
    mode: '0660'
  tags:
    - elasticsearch-all
    - elasticsearch-jvm-config
  register: elasticsearch_conf_changed
  
# Create Elasticsearch subdirectories
# Sets up required subdirectories for work, data, and plugins
- name: Creates directories for Elasticsearch
  with_items:
    - work
    - data
    - plugins
  file:
    path: "{{ top_dir }}/{{ elasticsearch.es_main_dir }}/{{ item }}"
    state: directory
    owner: "{{ elasticsearch.es_dir_owner }}"
    group: "{{ elasticsearch.es_dir_owner }}"
    mode: 0775
    recurse: yes
  tags:
    - elasticsearch-all
    - elasticsearch-install

# Remove default Nginx configurations
# Cleans up default Nginx configuration files
- name: Nginx delete default configs
  file:
    path: "/etc/nginx/conf.d/{{ item }}"
    state: absent
  with_items:
    - "default.conf"
    - "virtual.conf"
    - "ssl.conf"
  tags:
    - elasticsearch-all
    - elasticsearch-nginx-setup

# Configure main Nginx settings
# Creates the primary Nginx configuration file
- name: Create main nginx config file
  template:
    src: "templates/nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    owner: root
    group: root
    mode: 0600
  tags:
    - elasticsearch-all
    - elasticsearch-nginx-setup
  register: nginx_conf_changed

# Set up Elasticsearch-specific Nginx configuration
# Creates Nginx configuration for Elasticsearch access
- name: Create nginx configs for Elasticsearch
  template:
    src: "templates/{{ item }}.j2"
    dest: "/etc/nginx/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0600
  with_items:
    - "es.conf"
  notify:
    - Restart Nginx
  tags:
    - elasticsearch-all
    - elasticsearch-nginx-setup
  register: nginx_conf_changed

# Reload systemd configuration
# Forces systemd to reread configuration files
- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

# Restart Elasticsearch service
# Restarts Elasticsearch when configuration changes are detected
- name: Restart ElasticSearch
  service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  when: elasticsearch_conf_changed.changed
  with_items:
    - elasticsearch
  tags:
    - elasticsearch-all
    - elasticsearch-install

# Enable and start services
# Ensures both Elasticsearch and Nginx start on boot and are running
- name: Enable services to survive reboot
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - elasticsearch
    - nginx
  notify:
    - restart elasticsearch
  tags:
    - elasticsearch-all
    - elasticsearch-install

# Create Monit monitoring configuration
# Sets up monitoring for Elasticsearch service
- name: Create monit file
  template:
    src: "templates/{{ item }}.monit.j2"
    dest: "/etc/monit.d/{{ item }}"
    owner: root
    group: root
    mode: 0600
  with_items:
    - elasticsearch
  register: monit_file
  tags:
    - elasticsearch-all
    - elasticsearch-monit

# Reload Monit configuration
# Applies any changes to the Monit monitoring setup
- name: Reload monit if config file changed
  service:
    name: monit
    state: reloaded
  when: monit_file.changed
  tags:
    - elasticsearch-all
    - elasticsearch-monit

- name: Flush handlers
  meta: flush_handlers
  when: elasticsearch.elastic_password is defined
  tags:
    - elasticsearch-all
    - elasticsearch-security

# Теперь ждем готовности Elasticsearch после перезапуска
- name: Wait for Elasticsearch to be ready after restart
  wait_for:
    port: "{{ elasticsearch_port }}"
    host: localhost
    delay: 30  # Даем время на полный запуск
    timeout: 300
  when: elasticsearch.elastic_password is defined
  tags:
    - elasticsearch-all
    - elasticsearch-security

- name: Install expect for password automation
  yum:
    name: expect
    state: present
  when: elasticsearch.elastic_password is defined
  tags:
    - elasticsearch-all
    - elasticsearch-security

# Используйте простой expect one-liner
- name: Set elastic password using expect
  shell: |
    expect -c '
    spawn /usr/share/elasticsearch/bin/elasticsearch-reset-password -u {{ elasticsearch.elastic_username }} -i
    expect "Please confirm*"
    send "y\r"
    expect "Enter password*"
    send "{{ elasticsearch.elastic_password }}\r"
    expect "Re-enter password*"
    send "{{ elasticsearch.elastic_password }}\r"
    expect eof
    '
  when:
    - elasticsearch.elastic_password is defined
  tags:
    - elasticsearch-all
    - elasticsearch-security

- name: Flush handlers
  meta: flush_handlers
  when: elasticsearch.elastic_password is defined
  tags:
    - elasticsearch-all
    - elasticsearch-security
