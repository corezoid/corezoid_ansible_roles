---
# tasks file for worker
- name: Yum clean all
  command: yum clean all
#  args:
#    warn: false
  tags:
    - worker-all
    - worker-install

- name: Install worker app
  yum:
    name: "{{ item }}-{{ worker.version }}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "aws-corezoid"
  with_items:
    - worker
  tags:
    - worker-all
    - worker-install

- name: Add log directory
  file: path={{ top_dir }}/erlang/{{ item }}/log owner={{ app_user }} group={{ app_user }} state=directory
  with_items:
    - worker
  tags:
    - worker-all
    - worker-install

- name: Add internal_db directory
  file: path={{ top_dir }}/erlang/{{ item }}/internal_db owner={{ app_user }} group={{ app_user }} state=directory
  with_items:
    - worker
  tags:
    - worker-all
    - worker-install

- name: Fix permission
  file: path={{ top_dir }}/erlang/{{ item }} owner={{ app_user }} group={{ app_user }} state=directory mode=0700 recurse=yes
  with_items:
    - worker
  tags:
    - worker-all
    - worker-install

- name: make config folder
  file: path={{ conf_dir }} owner=root group=root state=directory mode=0755
  tags:
    - worker-all
    - worker-config

- name: Create worker.config file
  template: src=templates/{{ corezoid_release }}-{{ item }}.config.j2 dest={{ worker.config }}
  with_items:
    - worker
  tags:
    - worker-all
    - worker-config
    - worker-config-file

- name: Fix permission to worker.config file
  file: state=file path={{ worker.config }} owner={{ app_user }} group={{ app_user }} mode=0500
  with_items:
    - worker
  when: ansible_host != "127.0.0.1"
  tags:
    - worker-all
    - worker-config
    - worker-config-file

- name: Setup app systemd
  block:
    - name: Install systemd file
      template: src=templates/{{ item }}.service.j2 dest=/etc/systemd/system/{{ item }}.service owner=root group=root mode=0644
      with_items:
        - worker
    - name: Reload systemctl
      shell: systemctl daemon-reload
  when:
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "2" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "2023"
  tags:
    - worker-all
    - worker-app
    - worker-systemd

- name: check worker.service.d folder
  stat:
    path: "/etc/systemd/system/worker.service.d"
  register: systemd_folder_check
  tags:
    - worker-all
    - worker-app
    - worker-systemd

- name: Create worker systemd
  template: src=templates/{{ item }}.service.j2 dest=/etc/systemd/system/{{ item }}.service owner=root group=root mode=0644
  with_items:
    - worker
  tags:
    - worker-all
    - worker-initd
    - worker-initd-systemd
  when:
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9"

- name: Setup app systemd
  block:
    - name: Make folder for static content
      file:
        path: "/etc/systemd/system/{{ item }}.service.d"
        owner: root
        group: root
        state: directory
        mode: 0755
        recurse: yes
      with_items:
        - worker
    - name: Reload systemctl
      shell: systemctl daemon-reload
  when:
    - systemd_folder_check.stat.isreg is not defined
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "2" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "2023"
  tags:
    - worker-all
    - worker-app
    - worker-systemd

- name: Setup app systemd
  block:
    - name: Install limits file
      template: src=templates/limits dest=/etc/systemd/system/{{ item }}.service.d/limits.conf owner=root group=root mode=0644
      with_items:
        - worker
    - name: Reload systemctl
      shell: systemctl daemon-reload
  when:
    # - systemd2_folder_check.stat.isreg
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "2" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "2023"
  tags:
    - worker-all
    - worker-app
    - worker-systemd

- name: Enable Worker to survive reboot
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
    # no_block: yes
  with_items:
    - worker
  tags:
    - worker-all
    - worker-initd
    - worker-initd-start

- name: Create monit file
  template: src=templates/{{ item }}.monit.j2 dest=/etc/monit.d/{{ item }} owner=root group=root mode=0600
  with_items:
    - worker
  register: monit_file
  tags:
    - worker-all
    - worker-monit

# - name: Run Goss
#   import_tasks: goss.yml
#   tags:
#     - worker-all
#     - worker-goss

- name: Reload monit if config file changed
  service:
    name: monit
    state: reloaded
  when: monit_file.changed
  tags:
    - worker-all
    - worker-monit

- name: Change worker-id in config
  cron:
    special_time: reboot
    name: "Change worker-id in config"
    user: "root"
    job: "rand_id=$(pwgen -n 20 -s 1); sed -i -e \"s/{{ worker_id }}/${rand_id}/g\" {{ worker.config }}"
  when: autoscale
  tags:
    - worker-all
    - worker-cron
