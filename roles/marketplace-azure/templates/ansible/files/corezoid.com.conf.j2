{% if nginx_limits[instance_type['stdout']] != None %}
{% set nginx_limit_req = nginx_limits[instance_type['stdout']] %}
{% endif %}
server {
    listen 80;
    server_name default_server;
	rewrite ^/(.*)$ https://$host/$1 permanent;
}

server {
    listen 443;
    server_name default_server;
    include	ssl/cert-corezoid;

    large_client_header_buffers     4 16k;
    client_body_buffer_size 16k;
    client_max_body_size 16m;

    set $static_root    "/ebsmnt/www/capi-js";
    set $admin_root    "/ebsmnt/www/admin";
    set $static_local    "/ebsmnt/www/static";

#    # ELB
#    if ( $http_x_forwarded_proto != "https") {
#        rewrite ^/(.*)$   https://$host/$1    break;
#    }

    location /avatars {
	add_header      Content-Type image/jpeg;
	error_page  404  =200   /avatars/0.jpg;
	root $static_local;
    }

    location = /favicon.ico { return 200; }

    # web
    location ~ ^/api/[0-9]/sock_json/ {
            proxy_pass http://mw-api-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
    }

    location ~ ^/api/[0-9]/json$ {
            proxy_pass http://mw-api-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_read_timeout        300;
            proxy_send_timeout        300;
    }

    # api
    location ~ ^/api/[0-9]/json {
            limit_req zone={{ nginx_limit_req }} burst=50;
            proxy_pass http://mw-api-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_read_timeout        300;
            proxy_send_timeout        300;
    }

    # something else
    location /api {
            limit_req zone={{ nginx_limit_req }} burst=50;
            proxy_pass http://mw-api-backend;
            proxy_set_header   Host           $host;
            proxy_set_header X-Forwarded-For  $remote_addr;
            proxy_buffering off;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_read_timeout        300;
            proxy_send_timeout        300;
    }

    location /user_downloads {
            limit_req zone={{ nginx_limit_req }} burst=500;
            proxy_pass http://mw-api-backend;
            proxy_set_header   Host           $host;
            proxy_set_header X-Forwarded-For  $remote_addr;
            proxy_buffering off;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_read_timeout        300;
            proxy_send_timeout        300;
    }

    location /auth {
            proxy_set_header   Host           $host;
            proxy_set_header X-Forwarded-For  $remote_addr;
            proxy_buffering off;
            proxy_pass http://mw-api-backend;
    }

    location /admin_new {
	try_files $uri @s3 =404;
	error_page 404 = @s3;	

	add_header	Cache-Control: no-cache;	
	root    $admin_root;
    }

    location @s3 {
	rewrite ^.*$ /admin_new/index.html break;
	root    $admin_root;
    }

    location /admin {
        rewrite /(.*) /admin/index.html break;
        root    $static_root/layouts;
    }

    location /faq {
        rewrite /(.*) /faq/index.html break;
        root    $static_root/layouts;
    }

    location /how_to_use {
	rewrite ^/(.*)$         https://www.corezoid.com/$1     last;
    }

    location ~ ^/(en|ru)/static/img/(en|ru) {
            rewrite ^/.*/static/img/(.*)$ /static/img/$1 break;
            root    $static_root;
    }

    location /static {
            root    $static_root;
    }

    location /static_site {
            proxy_set_header   Host           $host;
            proxy_set_header X-Forwarded-For  $remote_addr;
            proxy_buffering off;
            proxy_pass http://cz-api-backend;
    }

    location / {
            proxy_set_header   Host           $host;
            proxy_set_header X-Forwarded-For  $remote_addr;
            proxy_buffering off;
            proxy_pass http://cz-api-backend;
    }
}
