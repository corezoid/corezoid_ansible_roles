---

- name: Install health_check_server app
  yum: name=health_check_server-{{ health_check_server_version }} state=present
  tags:
    - api-health-all
    - api-health-install

- name: Fix permission for health_check_server
  file: path={{ top_dir }}/erlang/health_check_server owner={{ app_user }} group={{ app_user }} state=directory mode=0755
  tags:
    - api-health-all
    - api-health-install

- name: Add log directory
  file: path={{ top_dir }}/erlang/{{ item }}/log owner={{ app_user }} group={{ app_user }} state=directory mode=0755
  with_items:
    - health_check_server
  tags:
    - api-health-all
    - api-health-install

- name: Make config folder
  file: path={{ conf_dir }} owner=root group=root state=directory mode=0755
  tags:
    - api-health-all
    - api-health-config

- name: Create health_check_server_config
  template: src=templates/{{ corezoid_release }}-{{ item }}.config.j2 dest={{ health_check_server_config }}
  with_items:
    - health_check_server
  tags:
    - api-health-all
    - api-health-config
    - api-health-config-file

- name: Fix permission to health_check_server.config file
  file: state=file path={{ health_check_server_config }} owner={{ app_user }} group={{ app_user }} mode=0600
  with_items:
    - health_check_server
  when: ansible_host != "127.0.0.1"
  tags:
    - api-health-all
    - api-health-config
    - api-health-config-file

- name: Create health_check_server init file
  template: src=templates/{{ corezoid_release }}-{{ item }}.init.j2 dest=/etc/init.d/{{ item }} owner=root group=root mode=0755
  with_items:
    - health_check_server
  tags:
    - api-health-all
    - api-health-initd

- name: Create health_check_server systemd
  template: src=templates/{{ item }}.service.j2 dest=/etc/systemd/system/{{ item }}.service owner=root group=root mode=0644
  with_items:
    - health_check_server
  tags:
    - api-health-all
    - api-health-initd
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Enable health_check_server to survive reboot
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
    # no_block: yes
  with_items:
    - health_check_server
  tags:
    - api-health-all
    - api-health-initd

- name: Create monit file
  template: src=templates/{{ item }}.monit.j2 dest=/etc/monit.d/{{ item }} owner=root group=root mode=0600
  with_items:
    - health_check_server
  register: monit_file
  tags:
    - health_check_server-all
    - health_check_server-monit

- name: Reload monit if config file changed
  service:
    name: monit
    state: reloaded
  when: monit_file.changed
  tags:
    - health_check_server-all
    - health_check_server-monit
