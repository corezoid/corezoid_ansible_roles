#!/bin/sh

# {{ item }}
#
# chkconfig:   35 98 02
# description: {{ item }}
# processname: {{ item }}
# config:
# pidfile: /var/run/{{ item }}/{{ item }}.pid

# Source function library.
. /etc/rc.d/init.d/functions

ROOTFOLDER="{{ top_dir }}"
ROOTFOLDER_CLEAN="{{ top_dir_clear }}}"
RUN_USER="{{ app_user }}"

APPDIR="${ROOTFOLDER}/erlang/{{ item }}"
APPDIR_CLEAN="${ROOTFOLDER_CLEAN}/erlang/{{ item }}"
APPNAME="{{ item }}"
PIDHOME="/var/run/{{ item }}"
PIDFILE="${PIDHOME}/${APPNAME}.pid"
LOCKFILE="/var/lock/subsys/${APPNAME}"

RUN_SCRIPT="${APPDIR}/bin/${APPNAME}"
CONFIG_PATH="${ROOTFOLDER}/conf/{{ item }}.config"
RUN_SCRIPT_EXT="export CONFIG_PATH=${CONFIG_PATH}; export HOME=${APPDIR}; ${RUN_SCRIPT}"
RUN_SCRIPT_EXT="${RUN_SCRIPT_EXT}"

NODETOOL="bin/nodetool"
NODEDOMAIN="127.0.0.1"

start() {
    echo -n $"Starting ${APPNAME}: "

    [ -d "${PIDHOME}" ] || { mkdir "${PIDHOME}"; chown ${RUN_USER}:${RUN_USER} ${PIDHOME};  }
    cd ${APPDIR}
    daemon --user ${RUN_USER} ${RUN_SCRIPT_EXT} start
    retval=$?
    echo
    [ $retval -eq 0 ] && touch ${LOCKFILE}
    [ $retval -eq 0 ] && sleep 2 && pgrep -f "${APPNAME}@${NODEDOMAIN} -setcookie ${APPNAME}" > ${PIDFILE}
    [ -s ${PIDFILE} ] || pgrep -f " ${APPNAME}@" > ${PIDFILE}
    [ -s ${PIDFILE} ] || pgrep -f " ${APPNAME} " > ${PIDFILE}
    [ -s ${PIDFILE} ] || pgrep -f "progname ${APPDIR_CLEAN}/bin/${APPNAME}" > ${PIDFILE}
    return $retval
}

stop() {
    echo -n $"Stopping ${APPNAME}: "
    cd ${APPDIR}
    daemon --user ${RUN_USER} ${RUN_SCRIPT_EXT} stop
    retval=$?
    echo
    [ $retval -eq 0 ] && cleanup
    return $retval
}

cleanup() {
    rm -f ${LOCKFILE}
}

restart() {
    echo -n $"Restarting ${APPNAME}: "

    [ -d "${PIDHOME}" ] || { mkdir "${PIDHOME}"; chown ${RUN_USER}:${RUN_USER} ${PIDHOME};  }
    cd ${APPDIR}
    daemon --user ${RUN_USER} ${RUN_SCRIPT_EXT} restart
    retval=$?
    echo
    [ $retval -eq 0 ] && touch ${LOCKFILE}
    [ $retval -eq 0 ] && sleep 2 && pgrep -f "${APPNAME}@${NODEDOMAIN} -setcookie ${APPNAME}" > ${PIDFILE}
    return $retval
}

rh_status() {
    status -p ${PIDFILE} ${RUN_SCRIPT}
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

reload() {
    echo -n $"Reloading ${APPNAME}: "
    su ${RUN_USER} -s /bin/bash -c "${RUN_SCRIPT_EXT} escript '${NODETOOL} -name ${APPNAME}@${NODEDOMAIN} -setcookie ${APPNAME} rpcterms live reload'"
    retval=$?
    echo
    return $retval
}
case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || (cleanup && exit 0)
        $1
        ;;
    restart)
        rh_status_q && restart
        rh_status_q || (cleanup && start)
        ;;
    reload)
        rh_status_q && reload
        ;;
    status|status_q)
        rh_$1
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|reload}"
        exit 2
esac
