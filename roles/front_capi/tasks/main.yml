---
# Display server IP addresses for debugging
# Shows all configured IPv4 addresses on the target system
- name: current ansible_all_ipv4_addresses
  debug: msg={{ ansible_all_ipv4_addresses }}
  tags:
    - front-capi-all
    - front-capi-app
    - front-capi-debug

# Clean YUM cache to ensure fresh package metadata
# Removes all cached package data to prevent installation issues
- name: Yum clean all
  command: yum clean all
  #  args:
  #    warn: false
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-package

# Install Nginx web server
# Sets up the Nginx package from default repositories
- name: Install nGinx package
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - nginx
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-package

# Install Corezoid Web Admin interface
# Deploys the web administration interface from Corezoid repository
- name: Install corezoid-web-admin package
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "aws-corezoid"
  with_items:
    - corezoid-web-admin-{{ corezoid_release_app_version.corezoid_web_admin }}
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-package-corezoid-web

# Install Superadmin static content
# Deploys superadmin interface for newer Corezoid versions
- name: Install Superadmin static
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "aws-corezoid"
  with_items:
    - conf-agent-client
  when: corezoid_release > '4.2'
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-superadmin

# Create image directory structure
# Sets up main directory for storing images
- name: Create nGinx img dir
  file: path={{ top_dir }}/img owner=nginx group=nginx state=directory mode=0755
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-img

# Create subdirectories for branding assets
# Sets up directories for favicon and logo storage
- name: Create nGinx dir for favicon and logo
  file: path={{ top_dir }}/img/{{ item }} owner=nginx group=nginx state=directory mode=0755
  with_items:
    - "favicon"
    - "logo"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-img

# Deploy default branding assets
# Installs default favicon and logo files
- name: Add default avatars
  copy: src=files/img/{{ item }} dest={{ top_dir }}/img owner=nginx group=nginx mode=0644
  with_items:
    - "favicon"
    - "logo"
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-img

# Remove default Nginx configurations
# Cleans up default configuration files to prevent conflicts
- name: Delete nGinx default configs
  file: path=/etc/nginx/conf.d/{{ item }} state=absent
  with_items:
    - "default.conf"
    - "virtual.conf"
    - "ssl.conf"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-delete

# Create main Nginx configurations
# Sets up primary configuration files for Corezoid and superadmin
- name: Create nGinx main configs
  template: src=templates/{{ corezoid_release }}-{{ item }}.j2 dest=/etc/nginx/conf.d/{{ item }} owner=root group=root mode=0644
  with_items:
    - "01-corezoid.com.conf"
    - "superadmin.conf"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-configs
    - front-capi-nginx-configs-main

# HCS configuration (commented)
#- name: Create nGinx configs for HCS
#  template: src=templates/{{ corezoid_release }}-{{ item }}.j2 dest=/etc/nginx/conf.d/{{ item }} owner=root group=root mode=0644
#  with_items:
#    - "02-hcs.corezoid.com.conf"
#  when: hc_server_disabled == "false"
#  tags:
#    - front-capi-all
#    - front-capi-nginx-setup
#    - front-capi-nginx-configs

# Create symbolic link for superadmin
# Sets up symbolic link for superadmin interface access
- name: Create symbolic for superadmin
  file:
    src: "/ebsmnt/www/conf-agent-client"
    dest: "/ebsmnt/www/conf-agent-client/superadmin"
    state: link
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-configs
    - front-capi-nginx-symlink

# Configure Nginx upstream and status
# Creates configuration for load balancing and status monitoring
- name: Create nGinx default configs
  template: src=templates/{{ item }}.j2 dest=/etc/nginx/conf.d/corezoid-{{ item }} owner=root group=root mode=0644
  with_items:
    - "upstream.conf"
    - "status.conf"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-configs

# Create SSL directory structure
# Sets up directory for SSL certificates with secure permissions
- name: Create nGinx ssl dir
  file: path={{ nginx_ssl_dir }} owner=root group=root state=directory mode=0755
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-ssl

# Deploy SSL certificate
# Installs SSL certificate with secure permissions
- name: Copy SSL certificate data
  copy:
    content: "{{ nginx_ssl_content }}"
    dest: "{{ nginx_ssl_filename }}"
    owner: "root"
    group: "root"
    mode: "0600"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-ssl

# Configure SSL certificate settings
# Sets up SSL configuration for secure communication
- name: Create nGinx ssl conf
  template: src=templates/{{ item }}.j2 dest={{ nginx_ssl_dir }}/{{ item }} owner=root group=root mode=0600
  with_items:
    - "cert-corezoid"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-ssl

# Create SSL certificate symlinks
# Sets up symbolic links for SSL certificate files
- name: Create nGinx ssl links
  file: src={{ nginx_ssl_filename }} dest={{ nginx_ssl_dir }}/{{ item }} state=link
  with_items:
    - "corezoid.crt"
    - "corezoid.key"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-ssl

# Create main Nginx configuration
# Sets up the primary Nginx server configuration
- name: Create nGinx conf
  template: src=templates/nginx.conf.j2 dest=/etc/nginx/nginx.conf owner=root group=root mode=0600
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-mainconfig

# Enable and start Nginx service
# Ensures Nginx starts on boot and is running
- name: Enable nGinx to survive reboot
  service:
    name: nginx
    state: started
    enabled: yes
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-system

# Restart Nginx to apply changes
# Forces Nginx to reload with new configuration
- name: Restart nGinx
  service:
    name: nginx
    state: restarted
  tags:
    - capi-all
    - capi-nginx-setup
    - capi-nginx-restart