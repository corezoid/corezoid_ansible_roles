---
# Clean YUM cache to ensure fresh package metadata
# Removes all cached package data to prevent installation issues
- name: Yum clean all
  command: yum clean all
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-package

# Install Nginx web server
# Sets up the Nginx package from default repositories
- name: Install nGinx package
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - nginx
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-package

# Install required packages Install Corezoid Web Admin and Superadmin static content
- name: Install required packages
  yum:
    name: "{{ item.name }}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "aws-corezoid"
  loop:
    - { name: "corezoid-web-admin-{{ corezoid_release_app_version.corezoid_web_admin }}", disablerepo: "*", enablerepo: "aws-corezoid" }
    - { name: "conf-agent-client", disablerepo: "*", enablerepo: "aws-corezoid" }
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-package

# Create directory structure
- name: Create directory structure
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default('nginx') }}"
    group: "{{ item.group | default('nginx') }}"
    state: directory
    mode: "{{ item.mode | default('0755') }}"
  loop:
    - { path: "{{ top_dir }}/img" }
    - { path: "{{ top_dir }}/img/favicon" }
    - { path: "{{ top_dir }}/img/logo" }
    - { path: "{{ nginx_ssl_dir }}", owner: "root", group: "root" }
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-img
    - front-capi-nginx-setup-ssl

# Deploy default branding assets
- name: Add default branding assets
  copy:
    src: "files/img/{{ item }}"
    dest: "{{ top_dir }}/img"
    owner: "nginx"
    group: "nginx"
    mode: "0644"
  loop:
    - "favicon"
    - "logo"
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-img

#Remove default Nginx configurations
- name: Delete nGinx default configs
  file:
    path: "/etc/nginx/conf.d/{{ item }}"
    state: absent
  loop:
    - "default.conf"
    - "virtual.conf"
    - "ssl.conf"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-delete

# Create Nginx configurations
- name: Create Nginx configuration files
  template:
    src: "templates/{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { src: "{{ corezoid_release }}-01-corezoid.com.conf.j2", dest: "/etc/nginx/conf.d/01-corezoid.com.conf" }
    - { src: "{{ corezoid_release }}-superadmin.conf.j2", dest: "/etc/nginx/conf.d/superadmin.conf" }
    - { src: "upstream.conf.j2", dest: "/etc/nginx/conf.d/corezoid-upstream.conf" }
    - { src: "status.conf.j2", dest: "/etc/nginx/conf.d/corezoid-status.conf" }
    - { src: "cert-corezoid.j2", dest: "{{ nginx_ssl_dir }}/cert-corezoid", mode: "0600" }
    - { src: "nginx.conf.j2", dest: "/etc/nginx/nginx.conf", mode: "0600" }
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-configs
    - front-capi-nginx-mainconfig

# Deploy SSL certificate
# Installs SSL certificate with secure permissions
- name: Copy SSL certificate data
  copy:
    content: "{{ nginx_ssl_content }}"
    dest: "{{ nginx_ssl_filename }}"
    owner: "root"
    group: "root"
    mode: "0600"
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-setup-ssl

# Create symbolic links
- name: Create symbolic links
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: "{{ item.state | default('link') }}"
  loop:
    - { src: "/ebsmnt/www/conf-agent-client", dest: "/ebsmnt/www/conf-agent-client/superadmin" }
    - { src: "{{ nginx_ssl_filename }}", dest: "{{ nginx_ssl_dir }}/corezoid.crt" }
    - { src: "{{ nginx_ssl_filename }}", dest: "{{ nginx_ssl_dir }}/corezoid.key" }
  tags:
    - front-capi-app
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-configs
    - front-capi-nginx-symlink
    - front-capi-nginx-setup-ssl


# Enable and start Nginx service
# Ensures Nginx starts on boot and is running
- name: Enable nGinx to survive reboot
  service:
    name: nginx
    state: started
    enabled: yes
  tags:
    - front-capi-all
    - front-capi-nginx-setup
    - front-capi-nginx-system

# Restart Nginx to apply changes
# Forces Nginx to reload with new configuration
- name: Restart nGinx
  service:
    name: nginx
    state: restarted
  tags:
    - capi-all
    - capi-nginx-setup
    - capi-nginx-restart