server {
    listen 80;
    server_name {{ capi_endpoint }};
    rewrite ^/(.*)$ https://$host/$1 permanent;
}

server {
{% if corezoid_api_sync.nginx_port is defined and corezoid_api_sync.nginx_port == 80 %}
    listen {{ corezoid_api_sync.nginx_port }};
{% else %}
    listen 443 ssl http2;
    include     ssl/cert-corezoid;
{% endif %}
    server_name {{ capi_endpoint }};

    # SECURE - https://habrahabr.ru/company/pt/blog/249809/
    add_header X-Frame-Options SAMEORIGIN;

    # SECURE - https://habrahabr.ru/post/216751/
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # SECURE - https://habrahabr.ru/post/149152/
    add_header X-XSS-Protection "1; mode=block";

    # SECURE - https://habrahabr.ru/post/168739/
    add_header X-Content-Type-Options "nosniff";

    #SECURE - https://habrahabr.ru/company/nixsolutions/blog/271575/
    #add_header Content-Security-Policy "default-src 'self';";

    access_log /var/log/nginx/{{ capi_endpoint }}.access.log up_log;
    error_log  /var/log/nginx/{{ capi_endpoint }}.error.log;

    large_client_header_buffers     4 16k;
    client_body_buffer_size 16k;
    client_max_body_size 16m;

    set $static_root    "{{ top_dir }}/www/capi-js";
    set $admin_root    "{{ top_dir }}/www/admin";
    set $static_local    "{{ top_dir }}/www/static";


    location /avatars {
        add_header      Content-Type image/jpeg;
        error_page  404  =200   /avatars/0.jpg;
        root $static_local;
    }

    location /favicon/ {
       root {{ top_dir }}/img;
       add_header X-Content-Type-Options "nosniff";
    }

    location /logo/ {
       root {{ top_dir }}/img;
    }

{% if single_account_location is defined %}
    location ~ ^/login {
      return 301 https://{{ capi_endpoint }}/account/enter/login;
    }
{% endif %}
    location = /favicon.ico {
        return 200;
        add_header X-Content-Type-Options "nosniff";
    }

    location / {
        root $admin_root;
        try_files $uri /index.html;
    }

    location ~ ^/editor {
        root $admin_root;
        try_files $uri /editor.html;
    }

    location ~ ^(/[a-zA-Z0-9-]+)?/dashboard {
        root $admin_root;
        try_files $uri /dashboard.html;
    }

    location ~ ^(/[a-zA-Z0-9-]+)?/process {
        root $admin_root;
        try_files $uri /editor.html;
    }

    # web
    location ~ ^/api/[0-9]/sock_json {
        proxy_pass http://mw-api-backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_intercept_errors on;
        proxy_next_upstream error timeout http_502 http_503 http_504;
    }

    # api
    location ~ ^/api/[0-9]/(json|plugins) {
{% if single_account_location is defined %}
        if ($http_referer ~* ^(https?\:\/\/)(.*?)\/account(.*?)$) {
            proxy_pass http://127.0.0.1:81;
        }
{% endif %}
        limit_req zone={{ nginx_limit_req }} burst=50;
        proxy_pass http://mw-api-backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_intercept_errors on;
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_read_timeout        300;
        proxy_send_timeout        300;
        add_header X-Content-Type-Options "nosniff";
    }

    # multipart_worker
    location ~ ^/api/2/(download|upload|copy|compare|merge) {
        proxy_pass http://mw-mult-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_buffering off;
        proxy_intercept_errors on;
        proxy_next_upstream error timeout http_502 http_503 http_504;
        add_header X-Content-Type-Options "nosniff";
    }

    location /user_downloads {
        limit_req zone={{ nginx_limit_req }} burst=500;
        proxy_pass http://mw-mult-backend;
        proxy_set_header   Host           $host;
        proxy_set_header X-Forwarded-For  $remote_addr;
        proxy_buffering off;
        proxy_intercept_errors on;
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_read_timeout        300;
        proxy_send_timeout        300;
    }

    location /superadmin {
    #rewrite ^/superadmin(.*)$ https://{{ superadmin_endpoint }} redirect;
        alias /ebsmnt/www/conf-agent-client;
        try_files $uri $uri/ /index.html =404;

    }

    location /superadmin/api {
        proxy_pass http://conf-agent-client-backend/api;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

    }

    location /superadmin/auth {
        proxy_pass http://mw-api-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

    }

    location /superadmin/system {
        proxy_pass http://mw-api-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

    }
    location /api {
{% if single_account_location is defined %}
        if ($http_referer ~* ^(https?\:\/\/)(.*?)\/account(.*?)$) {
            proxy_pass http://127.0.0.1:81;
        }
{% endif %}
        proxy_pass http://mw-api-backend;
        proxy_set_header   Host           $host;
        proxy_set_header X-Forwarded-For  $remote_addr;
        proxy_buffering off;
        proxy_intercept_errors on;
        proxy_next_upstream error timeout http_502 http_503 http_504;
    }

{% if single_account_location is defined %}
    location /auth2 {
        proxy_set_header   Host           $host;
        proxy_set_header X-Forwarded-For  $remote_addr;
        proxy_buffering off;
        proxy_pass http://mw-api-backend;
        proxy_cookie_path / "/; HTTPOnly; Secure";
    }

    location /auth {
        if ($http_referer ~* ^(https?\:\/\/)(.*?)\/account(.*?)$) {
            rewrite ^/account/(.*?) /$1  break;
            proxy_pass http://127.0.0.1:81;
        }
        proxy_set_header   Host           $host;
        proxy_set_header X-Forwarded-For  $remote_addr;
        proxy_buffering off;
        proxy_pass http://mw-api-backend;
        proxy_cookie_path / "/; HTTPOnly; Secure";
    }
{% else %}
    location /auth {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header X-Content-Type-Options "nosniff";
        proxy_set_header   Host           $host;
        proxy_set_header X-Forwarded-For  $remote_addr;
        proxy_buffering off;
        proxy_pass http://mw-api-backend;
        proxy_read_timeout        360;
        proxy_send_timeout        360;
    }
{% endif %}
    location /system {
{% if single_account_location is defined %}
        if ($http_referer ~* ^(https?\:\/\/)(.*?)\/account(.*?)$) {
            proxy_pass http://127.0.0.1:81;
        }
{% endif %}
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header X-Content-Type-Options "nosniff";
        proxy_set_header   Host           $host;
        proxy_set_header X-Forwarded-For  $remote_addr;
        proxy_buffering off;
        proxy_pass http://mw-api-backend;
        proxy_connect_timeout     360;
        proxy_read_timeout        360;
        proxy_send_timeout        720;
        add_header X-Frame-Options "SAMEORIGIN";
    }
{% if single_account_location is defined %}
    location /account {
        rewrite ^/account/(.*) /$1  break;
        proxy_pass http://127.0.0.1:81/$1?$args;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache off;
    }
{% endif %}
{% if hc_server_disabled == "false" %}
    location = /apihealth {
        proxy_pass http://{{ hcs_domain }}/api/1/json;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache off;
    }
{% endif %}
}
