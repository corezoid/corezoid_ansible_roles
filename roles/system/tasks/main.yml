---
# tasks file for system

- name: Show CPU count
  ansible.builtin.debug:
    var:
      ansible_hostname,
      ansible_facts.processor_count,
      ansible_facts.memtotal_mb
  tags:
  - system-all
  - system-info

# - name: Show Mem count
#   ansible.builtin.debug:
#     var: ansible_facts.memtotal_mb
#   tags:
#   - system-all
#   - system-info

# - name: Show Disk size
#   shell: cat /proc/partitions | grep sdc |awk '{print $3}'
#   tags:
#   - system-all
#   - system-info

- name: Set hostname
  hostname:
    name: "{{ hostname }}"
    # use: "redhat"
  when: hostname is defined
  tags:
  - system-all
  - system-set-hostname

- name: Get hostname
  debug:
    msg: "{{ ansible_hostname }}"
  when: hostname is defined
  tags:
  - system-all
  - system-set-hostname

- name: Put SELinux in permissive mode, logging actions that would be blocked.
  selinux:
    policy: targeted
    state: permissive
  when:
  - ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux"
  tags:
  - system-all
  - system-selinux-action

- name: Stop iptables
  service: name=iptables state=stopped
  when:
  - iptables_status is defined
  - not iptables_status
  tags:
  - system-all
  - system-iptables-action

- name: Disbale iptable on boot
  service: name=iptables enabled=no
  when:
    - iptables_status is defined
    - not iptables_status
  tags:
    - system-all
    - system-iptables-action

# - name: Check if IPv6 disabled at grub command line
#   command: cat /proc/cmdline
#   changed_when: false
#   ignore_errors: true
#   register: cmdline
#   tags:
#     - system-all
#     - system-ipv6

# - debug: var=cmdline
# - debug: var=ansible_os_family
# - debug: var=ipv6_config
# - block:
#     - include: ipv6-disable.yml
#       when: ipv6_config is not defined or ipv6_config == 'disable'
#   when: ansible_system == 'Linux' and not (' ipv6.disable=1' in cmdline.stdout)
#   tags:
#     - system-all
#     - system-ipv6


- name: Add app-user
  user: name={{ app_user | default('app-user') }} comment="Application user"
  tags:
    - system-all
    - system-add-app-user

- name: Check top_dir
  stat: path={{ top_dir }}
  register: top_dir_check
  tags:
    - system-all
    - system-add-app-dir

- name: Create top folder
  file: path={{ top_dir }} owner=root group=root state=directory mode=0755
  tags:
    - system-all
    - system-add-app-dir
  when:
    - not top_dir_check.stat.exists

- name: check top_dir
  stat: path={{ top_dir }}
  register: top_dir_check
  tags:
    - system-all
    - system-add-app-dir

# - name: rmdir /opt
#   file:
#     path: "/opt"
#     state: absent
#   when:
#     - ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "OracleLinux"
#     - opt_sym_link == true
#   tags:
#     - system-all
#     - system-add-app-dir

# - name: link {{ top_dir }} to /opt
#   file: src={{ top_dir }} dest=/opt owner=root group=root state=link
#   when:
#     - ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "OracleLinux"
#     - opt_sym_link == true
#   tags:
#     - system-all
#     - system-add-app-dir

# - name: link {{ top_dir }} to /opt
#   file: src=/opt dest={{ top_dir }} owner=root group=root state=link
#   when:
#     - top_dir_check.stat.exists == false
#     - ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "OracleLinux"
#   tags:
#     - system-all
#     - system-add-app-dir

- name: change sysctl options
  sysctl: name={{ item.name }} value={{ item.value }} sysctl_set=yes state=present reload=yes
  ignore_errors: true
  with_items:
    - { "name": "vm.swappiness", "value": 1 }
    - { "name": "net.ipv4.tcp_tw_reuse", "value": "1" }
    - { "name": "net.ipv4.tcp_fin_timeout", "value": "10" }
    - { "name": "net.core.somaxconn", "value": "4096" }
    - { "name": "net.ipv4.tcp_max_syn_backlog", "value": "8192" }
    - { "name": "net.ipv4.ip_local_port_range", "value": "10000 65000" }
  tags:
    - system-all
    - system-change-sysctl

- name: change sysctl options RedHat
  sysctl: name={{ item.name }} value={{ item.value }} sysctl_set=yes state=present reload=yes
  ignore_errors: true
  with_items:
    - { "name": "kernel.sem", "value": "32000 1024000000 500 2000" }
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux"
  tags:
    - system-all
    - system-redhat-change-sysctl

- name: update resolv.conf
  template: src=templates/resolv.conf.j2 dest=/etc/resolv.conf owner=root group=root mode=0644
  when: change_nameservers
  tags:
    - system-all
    - system-change-resolve-conf

- name: update .bashrc
  template: src=templates/bashrc.j2 dest=/root/.bashrc owner=root group=root mode=0644
  tags:
    - system-all
    - system-bashrc

- name: correct system limits
  pam_limits: domain=* limit_type=- limit_item={{ item.name }} value={{ item.value }}
  with_items:
    - { "name": "nofile", "value": "512000" }
    - { "name": "nproc", "value": "64000" }
  tags:
    - system-all
    - system-change-limits-conf

- name: Delete default 90-nproc.conf
  file:
    path: "/etc/security/limits.d/90-nproc.conf"
    state: absent
  tags:
    - system-all
    - system-change-limits-conf

- name: Ansible check lost+found directory exists.
  stat:
    path: "{{ top_dir }}/lost+found"
  register: trash_dir
  tags:
    - system-all
    - system-delete-trash-dir

# - debug:
#     msg: "{{ trash_dir.stat.exists }}"
#   tags:
#     - system-all
#     - system-delete-trash-dir

- name: Delete lost+found directory
  file:
    path: "{{ top_dir }}/lost+found"
    state: absent
  when: trash_dir.stat.exists
  tags:
    - system-all
    - system-delete-trash-dir

- name: install base Packages
  yum:
    name:
    - "bind-utils"
    - "mc"
    - "atop"
    - "htop"
    - "iotop"
    - "iftop"
    - "wget"
    - "bind-libs"
    - "lsof"
    - "screen"
    - "mlocate"
    - "nc"
    - "mtr"
    - "tcpdump"
    - "pigz"
    - "pwgen"
    - "glibc"
    - "vim"
    - "net-tools"
    - "jq"
    - "bash-completion"
    - "cronie"

    # lock_timeout: 360
    state: present
    update_cache: yes
  ignore_errors: yes
  tags:
    - system-all
    - system-rpm
# нужно для работы с RDS
#- name: install Postgress Package for Centos/Rhel
#  yum:
#    name:
#    - "postgresql{{ db_ver }}"
#    lock_timeout: 360
#    state: present
#    update_cache: yes
#  ignore_errors: yes
#  when:
#    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux"
#    - ansible_distribution_major_version == "7"
#  tags:
#    - system-all
#    - system-rpm

- name: Install python36 for RHEL/CentOS/OracleLinux 8
  yum:
    name:
    - "python36"
    state: present
    update_cache: yes
  ignore_errors: yes
  when:
    - ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS' or ansible_distribution == "OracleLinux"
    - ansible_distribution_major_version == "8"
  tags:
    - system-all
    - system-rpm

- name: Setup monit
  import_tasks: monit.yml
  tags:
    - system-all
    - system-monit



