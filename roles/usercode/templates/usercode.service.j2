[Unit]
Description=Corezoid Usercode Application
{% if box_server is defined and box_server == true %}
After=network.target postgresql-{{ db_version }}.service redis.service redis2.service elasticsearch.service pgbouncer.service rabbitmq-server.service crond.service
{% else %}
After=network.target crond.service
{% endif%}

[Service]
#The type could be different , depends on many things
#not necessary but if it uses pid file - describe it
Type=forking
PermissionsStartOnly=true

User=app-user
Group=app-user

#PIDFile=/var/run/usercode/cce.pid
ExecStartPre=/bin/mkdir -p /var/run/usercode
ExecStartPre=/bin/chown app-user:app-user /var/run/usercode

Environment=CONFIG_PATH=/ebsmnt/conf/usercode.config
Environment=LD_LIBRARY_PATH=/opt/gcc/gcc-6.2.0/lib64/
Environment=HOME=/ebsmnt/erlang/usercode

{% if ansible_distribution_version == "7.5" %}
ExecStart=/ebsmnt/erlang/usercode/bin/cce-1 start
{% else %}
ExecStart=/ebsmnt/erlang/usercode/bin/cce start
{% endif %}
ExecStartPost=/bin/sh -c 'echo $MAINPID > /var/run/usercode/cce.pid'

{% if ansible_distribution_version == "7.5" %}
ExecStop=/ebsmnt/erlang/usercode/bin/cce-1 stop
{% else %}
ExecStop=/ebsmnt/erlang/usercode/bin/cce stop
{% endif %}
ExecStopPost=/bin/sh -c 'rm -fr /var/run/usercode/cce.pid'

#Automatic restart by systemd
Restart=on-failure
#Time for system to wait before restart
#Restartsec=42s

[Install]
WantedBy=multi-user.target
