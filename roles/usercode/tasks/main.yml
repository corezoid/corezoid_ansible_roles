---
# tasks file for usercode
-
- name: Yum clean all
  command: yum clean all
#  args:
#    warn: false
  tags:
    - usercode-all
    - usercode-install
# old usercode
#=============================================
#- name: Add gcc.repo
#  template:
#    src: gcc.repo
#    dest: /etc/yum.repos.d/gcc.repo

#- name: Install gcc packages
#  yum:
#    name: "{{ item }}"
#    state: present
#    update_cache: yes
#    disablerepo: "*"
#    enablerepo: "gcc"
#    disable_gpg_check: yes
#  with_items:
#    - "gcc-libs-0.0.3"
#  tags:
#    - usercode-all
#    - usercode-install
#=============================================
- name: Install packages
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "aws-corezoid"
    disable_gpg_check: yes
  with_items:
    - "usercode-{{ usercode.version }}"
#    - "gcc-libs-0.0.3"
  tags:
    - usercode-all
    - usercode-install

- name: Make config folder
  file: path={{ conf_dir }} owner=root group=root state=directory mode=0755
  tags:
    - usercode-all
    - usercode-config

- name: Create app configs
  template:
    src: "templates/{{ corezoid_release }}-usercode.config.j2"
    dest: "{{ usercode.config }}"
  tags:
    - usercode-all
    - usercode-config
    - usercode-config-file

- name: Fix permission to usercode.config file
  file: state=file path={{ usercode.config }} owner={{ app_user }} group={{ app_user }} mode=0500
  with_items:
    - usercode
  when: ansible_host != "127.0.0.1"
  tags:
    - usercode-all
    - usercode-config
    - usercode-config-file

- name: Upload lib ssl usercode Oracl linux 8
  copy: src=files/libcrypto.so.1.0.0 dest=/lib64/libcrypto.so.1.0.0
  when:
    - ansible_distribution == "OracleLinux"
    - ansible_distribution_major_version == "8"
  tags:
    - usercode-all
    - usercode-install
    - usercode-add-libs

- name: Upload usercode libs
  template: src=files/{{ item }} dest={{ top_dir }}/erlang/usercode/lib/cce-0.9/priv/libs/{{ item }}
  with_items:
    - moment-timezone.js
    - sha256.js
    - sha512.js
    - hex.js
  tags:
    - usercode-all
    - usercode-install
    - usercode-add-libs

- name: Upload usercode libs
  template: src=files/{{ item }} dest={{ top_dir }}/erlang/usercode/libs/{{ item }}
  with_items:
    - moment-timezone.js
    - sha256.js
    - sha512.js
    - hex.js
  tags:
    - usercode-all
    - usercode-install
    - usercode-add-libs

- name: Add log directory
  file: path={{ top_dir }}/erlang/{{ item }} owner={{ app_user }} group={{ app_user }} state=directory
  with_items:
    - "usercode/log"
  tags:
    - usercode-all
    - usercode-install

- name: Fix permission
  file: path={{ top_dir }}/erlang/{{ item }} owner={{ app_user }} group={{ app_user }} state=directory mode=0700 recurse=yes
  with_items:
    - usercode
  tags:
    - usercode-all
    - usercode-install
    - usercode-install-permission

- name: Setup app systemd
  template: src=templates/{{ item }}.service.j2 dest=/etc/systemd/system/{{ item }}.service owner=root group=root mode=0644
  with_items:
    - usercode
  tags:
    - usercode-all
    - usercode-initd
    - usercode-systemd
#  when:
#    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS"
#    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9"

- name: check usercode.service.d folder
  stat:
    path: "/etc/systemd/system/usercode.service.d"
  register: systemd_folder_check
  tags:
    - usercode-all
    - usercode-app
    - usercode-systemd

- name: Setup app systemd
  block:
    - name: Make folder for static content
      file:
        path: "/etc/systemd/system/{{ item }}.service.d"
        owner: root
        group: root
        state: directory
        mode: 0755
        recurse: yes
      with_items:
        - usercode
    - name: Reload systemctl
      shell: systemctl daemon-reload
  when:
    - systemd_folder_check.stat.isreg is not defined
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "2" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "2023"
  tags:
    - usercode-all
    - usercode-app
    - usercode-systemd


- name: check usercode.service.d folder
  stat:
    path: "/etc/systemd/system/usercode.service.d"
  register: systemd2_folder_check
  tags:
    - usercode-all
    - usercode-app
    - usercode-systemd


- name: Setup app systemd
  block:
    - name: Install limits file
      template: src=templates/limits dest=/etc/systemd/system/{{ item }}.service.d/limits.conf owner=root group=root mode=0644
      with_items:
        - usercode
    - name: Reload systemctl
      shell: systemctl daemon-reload
  when:
    # - systemd2_folder_check.stat.isreg
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "2" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "2023"
  tags:
    - usercode-all
    - usercode-app
    - usercode-systemd

- name: Enable services to survive reboot
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - usercode
  tags:
    - usercode-all
    - usercode-initd
    - usercode-initd-start

- name: Create monit file
  template: src=templates/{{ item }}.monit.j2 dest=/etc/monit.d/{{ item }} owner=root group=root mode=0600
  with_items:
    - usercode
  register: monit_file
  tags:
    - usercode-all
    - usercode-monit

- name: Reload monit if config file changed
  service:
    name: monit
    state: reloaded
  when: monit_file.changed
  tags:
    - usercode-all
    - usercode-monit

- name: Change usercode-id in config
  cron:
    special_time: reboot
    name: "Change cce-id in config"
    user: "root"
    job: "rand_id=$(pwgen -n 20 -s 1); sed -i -e \"s/{{ cce_id }}/${rand_id}/g\" {{ usercode.config }}"
  when: autoscale
  tags:
    - usercode-all
    - usercode-cron

