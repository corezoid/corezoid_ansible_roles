---
# tasks file for usercode
# Set service name as a fact for consistent usage
- name: Set service name variable
  set_fact:
    service_name: "usercode"
  tags:
    - always

# Clean YUM cache to ensure fresh package metadata
# Removes all cached package data to prevent installation issues
- name: Yum clean all
  command: yum clean all
  tags:
    - usercode-all
    - usercode-install

# Install Usercode package
# Installs or updates the usercode package from AWS Corezoid repository
- name: Install packages
  yum:
    name: "{{ service_name }}-{{ usercode.version }}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "aws-corezoid"
    disable_gpg_check: yes
  tags:
    - usercode-all
    - usercode-install

# Create all required directories in a single task using a loop
- name: Create application directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    state: directory
    mode: "{{ item.mode }}"
    recurse: "{{ item.recurse | default(false) }}"
  loop:
    - { path: "{{ conf_dir }}", owner: "root", group: "root", mode: "0755" }
    - { path: "{{ top_dir }}/erlang/{{ service_name }}/log", owner: "{{ app_user }}", group: "{{ app_user }}", mode: "0755" }
    - { path: "{{ top_dir }}/erlang/{{ service_name }}", owner: "{{ app_user }}", group: "{{ app_user }}", mode: "0700", recurse: yes }
  tags:
    - usercode-all
    - usercode-config
    - usercode-install

# Generate Usercode configuration
# Creates the main configuration file from template
- name: Create app configs
  template: src=templates/{{ corezoid_release }}-{{ service_name }}.config.j2 dest={{ usercode.config }} owner={{ app_user }} group={{ app_user }} mode=0500
  tags:
    - usercode-all
    - usercode-config
    - usercode-config-file

# Install SSL library for Oracle Linux 8
# Provides necessary SSL support for Oracle Linux 8 environments
- name: Upload lib ssl usercode Oracl linux 8
  copy: src=files/libcrypto.so.1.0.0 dest=/lib64/libcrypto.so.1.0.0
  when:
    - ansible_distribution == "OracleLinux"
    - ansible_distribution_major_version == "8"
  tags:
    - usercode-all
    - usercode-install
    - usercode-add-libs

# Deploy JavaScript libraries to CCE directory
# Installs required JavaScript libraries for CCE functionality
- name: Upload usercode libs
  template: src=files/{{ item }} dest={{ top_dir }}/erlang/usercode/lib/cce-0.9/priv/libs/{{ item }}
  with_items:
    - moment-timezone.js
    - sha256.js
    - sha512.js
    - hex.js
  tags:
    - usercode-all
    - usercode-install
    - usercode-add-libs

# Deploy JavaScript libraries to main libs directory
# Installs required JavaScript libraries for general functionality
- name: Upload usercode libs
  template: src=files/{{ item }} dest={{ top_dir }}/erlang/usercode/libs/{{ item }}
  with_items:
    - moment-timezone.js
    - sha256.js
    - sha512.js
    - hex.js
  tags:
    - usercode-all
    - usercode-install
    - usercode-add-libs

# Enable and start Usercode service
# Ensures the service starts automatically on boot and is running
- name: Enable services to survive reboot
  service:
    name: "{{ service_name }}"
    enabled: yes
    state: started
  tags:
    - usercode-all
    - usercode-start

# Create Monit monitoring configuration
# Sets up monitoring for the Usercode service
- name: Create monit file
  template: src=templates/{{ item }}.monit.j2 dest=/etc/monit.d/{{ item }} owner=root group=root mode=0600
  with_items:
    - usercode
  register: monit_file
  tags:
    - usercode-all
    - usercode-monit

# Reload Monit configuration
# Applies any changes to the Monit monitoring setup
- name: Reload monit if config file changed
  service:
    name: monit
    state: reloaded
  when: monit_file.changed
  tags:
    - usercode-all
    - usercode-monit
