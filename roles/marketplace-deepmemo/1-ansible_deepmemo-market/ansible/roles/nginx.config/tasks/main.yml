---
# tasks file for nginx.config
- name: Create folder for ssl
  file:
    name: "/opt/ssl"
    state: directory
    owner: root
    group: root
    mode: 0700
  when: static_ssl

- name: Copy and decrypt ssl cert
  copy:
    src: "ssl.tar.gz"
    dest: /tmp
    decrypt: yes
  when: static_ssl

- name: Untar ssl certs
  unarchive:
    src: "/tmp/ssl.tar.gz"
    dest: "/opt/ssl"
    remote_src: yes
  when: static_ssl

- name: Copy main nginx conf file
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644

- name: Copy nginx conf for deepmemo
  template:
    src: deepmemo.conf.j2
    dest: /etc/nginx/conf.d/default.conf
    owner: root
    group: root
    mode: 0644

- name: Copy nginx conf for deepmemo
  template:
    src: upstream.conf.j2
    dest: /etc/nginx/conf.d/upstream.conf
    owner: root
    group: root
    mode: 0644

- name: Copy nginx conf for deepmemo
  template:
    src: ssl.conf.j2
    dest: /etc/nginx/ssl.conf
    owner: root
    group: root
    mode: 0644

- name: Restart nginx service
  systemd:
    name: nginx
    state: restarted
  when:
    - aws_centos_distribution_major_version == "7"

- name: Retart nginx service
  service:
    name: nginx
    state: restarted
  when:
    - aws_centos_distribution_major_version == "6"

- name: Setup selinux rules for nginx
  raw: "{{ item }}"
  with_items:
    - "setsebool -P httpd_can_network_connect 1"
    - "restorecon  /etc/nginx/conf.d/"
    - "restorecon  /etc/nginx/conf.d/*"
    - "restorecon  /etc/nginx/ssl/"
    - "restorecon  /etc/nginx/ssl/*"
  when:
    - selinux_enabled


- name: Setup sysctl rules
  raw: "{{ item }}"
  with_items:
    - "echo 'net.ipv4.tcp_tw_reuse=1' >> /etc/sysctl.conf"
    - "echo 'net.ipv4.ip_local_port_range= 1024 65535' >> /etc/sysctl.conf"
    - "sysctl net.ipv4.tcp_tw_reuse=1"
    - "sysctl net.ipv4.ip_local_port_range='1024 65535'"
