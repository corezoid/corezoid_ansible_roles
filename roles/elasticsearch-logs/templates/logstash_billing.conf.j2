input {
  file {
    path => "/tmp/conveyor_billing*"
  }
}

filter {

  if "conveyor_billing" in [tags] {
    grok {
      match => [ "message", "%{NUMBER:conveyor_id:int}\|%{NUMBER:user_id:int}\|%{NUMBER:opers:int}\|%{NUMBER:tacts:int}\|%{NUMBER:traff:float}\|%{NUMBER:ts:int}" ]
    }
    ruby {
      code => "event['DB'] = event['conveyor_id'] % 100; event['task_size'] = event['traff'] / event['tacts'] * 1024"
    }
    mutate {
      convert => {
        "conveyor_id" => "integer"
        "DB" => "integer"
        "user_id" => "integer"
        "opers" => "integer"
        "tacts" => "integer"
        "traff" => "float"
        "ts" => "integer"
        "task_size" => "float"
        "spam" => "float"
      }
    }
  }

  if "conveyor_billing_timers" in [tags] {
    grok {
      match => [ "message", "%{NUMBER:conveyor_id:int}\|%{NUMBER:timers:int}\|%{NUMBER:ts:int}" ]
    }
    ruby {
      code => "event['DB'] = event['conveyor_id'] % 100"
    }
    mutate {
      convert => {
        "conveyor_id" => "integer"
        "DB" => "integer"
        "timers" => "integer"
        "ts" => "integer"
      }
    }
  }
  if "conveyor_billing_cce" in [tags] {
    grok {
      match => [ "message", "%{NUMBER:conveyor_id:int}\|%{NUMBER:node_id}\|%{NUMBER:avg_time:float}\|%{NUMBER:ts:int}" ]
    }
    ruby {
      code => "event['DB'] = event['conveyor_id'] % 100"
    }
    mutate {
      convert => {
        "conveyor_id" => "integer"
        "node_id" => "string"
        "DB" => "integer"
        "avg_time" => "float"
        "ts" => "integer"
      }
    }
  }

  mutate {
    remove_tag => ["beats_input_codec_plain_applied"]
  }
  mutate {
    remove_field => ["fields", "input_type"]
  }
}

output {
  elasticsearch {
    hosts => ["localhost:8100"]
    index => "logstash-billing-%{+YYYY.MM.dd}"
    document_id => "%{offset}_%{host}_%{ts}"
    #document_id => "%{host}_%{ts}"
    template_overwrite => true
  }
}