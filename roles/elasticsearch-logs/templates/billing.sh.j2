#!/bin/bash

WHICH="/usr/bin/which"
ECHO=$(${WHICH} echo)
CAT=$(${WHICH} cat)
PSQL=$(${WHICH} psql)
STAT=$(${WHICH} stat)

BILLING_HOST="{{ db_main.host }}"
PORT={{ pgbouncer.port }}
USER="{{ db_monitoring_user }}"
DATABASE="conveyor"

#-------------------------------------------------------------------------------------
OUT_FILE="/tmp/conveyor_billing"

OUT_FILE_SIZE=$(${STAT} --printf="%s" ${OUT_FILE})

if [ "${OUT_FILE_SIZE}" -ge 10000000 ];
then
    ${CAT} /dev/null > ${OUT_FILE}
fi

# seconds=$(date -d "2 min ago" +%s); seconds=$(echo $seconds/100|bc );
# ts=$seconds"00"

SQL_REQ="select max(ts)-120 from conveyor_billing;"
ts=$(${PSQL} -h ${BILLING_HOST} -p ${PORT} -U ${USER} -d ${DATABASE} -Atc "${SQL_REQ}")

#SQL_REQ="SELECT conveyor_id, user_id, SUM(opers_count) as opers, SUM(tacts_count) as tacts, trunc(SUM(tasks_bytes_size)/(1024*1024), 2) as traff, ts FROM conveyor_billing WHERE ts >= extract(epoch from now() - interval '2 minutes')::integer and ts <= extract(epoch from now() - interval '1 minutes')::integer GROUP by conveyor_id, user_id, ts;"
# SQL_REQ="SELECT conveyor_id, user_id, SUM(opers_count) as opers, SUM(tacts_count) as tacts,
#                trunc(SUM(tasks_bytes_size)/(1024*1024), 2) as traff, ts FROM conveyor_billing
#                WHERE ts >= extract(epoch from now() - interval '180 seconds')::integer and ts <= extract(epoch from now() - interval '120 seconds')::integer GROUP by conveyor_id, user_id, ts;"

SQL_REQ="SELECT conveyor_id, user_id, SUM(opers_count) as opers, SUM(tacts_count) as tacts,
               trunc(SUM(tasks_bytes_size)/(1024*1024), 2) as traff, ts FROM conveyor_billing
               WHERE ts = "${ts}" GROUP by conveyor_id, user_id, ts;"


${PSQL} -h ${BILLING_HOST} -p ${PORT} -U ${USER} -d ${DATABASE} -Atc "${SQL_REQ}" >> ${OUT_FILE}
#-------------------------------------------------------------------------------------

OUT_FILE="/tmp/conveyor_billing_timers"

OUT_FILE_SIZE=$(${STAT} --printf="%s" ${OUT_FILE})

if [ "${OUT_FILE_SIZE}" -ge 10000000 ];
then
    ${CAT} /dev/null > ${OUT_FILE}
fi

SQL_REQ="SELECT conveyor_id, sum(called_count) as called_count_sum, ts FROM conveyor_called_timers WHERE ts >= extract(epoch from now() - interval '2 minutes')::integer and ts <= extract(epoch from now()  - interval '1 minutes')::integer GROUP by conveyor_id, ts ORDER BY called_count_sum DESC LIMIT 100;"

${PSQL} -h ${BILLING_HOST} -p ${PORT} -U ${USER} -d ${DATABASE} -Atc "${SQL_REQ}" >> ${OUT_FILE}
#-------------------------------------------------------------------------------------

OUT_FILE="/tmp/conveyor_billing_cce"

OUT_FILE_SIZE=$(${STAT} --printf="%s" ${OUT_FILE})

if [ "${OUT_FILE_SIZE}" -ge 10000000 ];
then
    ${CAT} /dev/null > ${OUT_FILE}
fi

#SQL_REQ="SELECT conveyor_id, node_id, sum_time/sum_count as avg_time, ts FROM cce_exec_time WHERE ts >= extract(epoch from now() - interval '2 minutes')::integer and ts <= extract(epoch from now() - interval '1 minutes')::integer GROUP by conveyor_id,node_id, ts;"
SQL_REQ="SELECT conveyor_id, node_id, sum_time/sum_count as avg_time, ts FROM cce_exec_time WHERE ts >= extract(epoch from now() - interval '2 minutes')::integer and ts <= extract(epoch from now() - interval '1 minutes')::integer ;"

${PSQL} -h ${BILLING_HOST} -p ${PORT} -U ${USER} -d ${DATABASE} -Atc "${SQL_REQ}" >> ${OUT_FILE}
#-------------------------------------------------------------------------------------