---
# tasks file for http-worker

- name: Yum clean all
  command: yum clean all
#  args:
#    warn: false
  tags:
    - http-worker-all
    - http-worker-install

- name: Install http-worker app
  yum:
    name: "{{ item }}-{{http_worker.version}}"
    state: present
    update_cache: yes
    disablerepo: "*"
    enablerepo: "aws-corezoid"
  with_items:
    - http-worker
  tags:
    - http-worker-all
    - http-worker-install

- name: Add log directory
  file: path={{ top_dir }}/erlang/{{ item }}/log owner={{ app_user }} group={{ app_user }} state=directory
  with_items:
    - http-worker
  tags:
    - http-worker-all
    - http-worker-install

- name: Fix permission for http-worker folder
  file: path={{ top_dir }}/erlang/{{ item }} owner={{ app_user }} group={{ app_user }} state=directory mode=0700 recurse=yes
  with_items:
    - http-worker
  tags:
    - http-worker-all
    - http-worker-install

- name: Make config folder
  file: path={{ conf_dir }} owner=root group=root state=directory mode=0755
  tags:
    - http-worker-all
    - http-worker-config

- name: Create http_worker.config
  template: src=templates/{{ corezoid_release }}-http_worker.config.j2 dest={{ http_worker.config }}
  with_items:
    - http-worker
  tags:
    - http-worker-all
    - http-worker-config
    - http-worker-config-file

- name: Fix permission to http_worker.config file
  file: state=file path={{ http_worker.config }} owner={{ app_user }} group={{ app_user }} mode=0500
  when: ansible_host != "127.0.0.1"
  tags:
    - http-worker-all
    - http-worker-config
    - http-worker-config-file

- name: Create http-worker systemd
  template: src=templates/{{ item }}.service.j2 dest=/etc/systemd/system/{{ item }}.service owner=root group=root mode=0644
  with_items:
    - http-worker
  tags:
    - http-worker-all
    - http-worker-initd
    - http-worker-systemd
  when:
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9"

- name: check http-worker.service.d folder
  stat:
    path: "/etc/systemd/system/http-worker.service.d"
  register: systemd_folder_check
  tags:
    - http-worker-all
    - http-worker-app
    - http-worker-systemd

- name: Setup app systemd
  block:
    - name: Make folder for static content
      file:
        path: "/etc/systemd/system/{{ item }}.service.d"
        owner: root
        group: root
        state: directory
        mode: 0755
        recurse: yes
      with_items:
        - http-worker
    - name: Reload systemctl
      shell: systemctl daemon-reload
  when:
    - systemd_folder_check.stat.isreg is not defined
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "2" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "2023"
  tags:
    - http-worker-all
    - http-worker-app
    - http-worker-systemd


- name: check http-worker.service.d folder
  stat:
    path: "/etc/systemd/system/http-worker.service.d"
  register: systemd2_folder_check
  tags:
    - http-worker-all
    - http-worker-app
    - http-worker-systemd


- name: Setup app systemd
  block:
    - name: Install limits file
      template: src=templates/limits dest=/etc/systemd/system/{{ item }}.service.d/limits.conf owner=root group=root mode=0644
      with_items:
        - http-worker
    - name: Reload systemctl
      shell: systemctl daemon-reload
  when:
    # - systemd2_folder_check.stat.isreg
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS" or ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "2" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9" or ansible_distribution_major_version == "2023"
  tags:
    - http-worker-all
    - http-worker-app
    - http-worker-systemd


- name: Start http-worker
  systemd:
    state: started
    daemon_reload: yes
    name: http-worker
  when:
    - ansible_os_family == "RedHat" or ansible_os_family == "CentOS"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9"

- name: Enable http-worker to survive reboot
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
    # no_block: yes
  with_items:
    - http-worker
  tags:
    - http-worker-all
    - http-worker-initd
    - http-worker-initd-start

- name: Check that old monit file for http_worker exists
  stat:
    path: "/etc/monit.d/{{ item }}"
  with_items:
    - http_worker
  register: stat_result
  tags:
    - http-worker-all
    - http-worker-monit

- name: current stat_result
  debug: msg={{ stat_result.results[0].stat.exists }}
  tags:
    - http-worker-all
    - http-worker-monit

- name: Delete old monit file for http_worker
  file:
    path: "/etc/monit.d/{{ item }}"
    state: absent
  with_items:
    - http_worker
  when: stat_result.results[0].stat.exists == true
  tags:
    - http-worker-all
    - http-worker-monit

- name: Create monit file
  template: src=templates/{{ item }}.monit.j2 dest=/etc/monit.d/{{ item }} owner=root group=root mode=0600
  with_items:
    - http-worker
  register: monit_file
  tags:
    - http-worker-all
    - http-worker-monit

- name: Start service monit, if not started
  service:
    name: monit
    state: started
  tags:
    - http-worker-all
    - http-worker-monit

- name: Reload service monit, if monit files changed
  service:
    name: monit
    state: reloaded
  when: monit_file.results[0].changed == true
  tags:
    - http-worker-all
    - http-worker-monit

- name: Change http-worker-id in config
  cron:
    special_time: reboot
    name: "Change http-worker-id in config"
    user: "root"
    job: "rand_id=$(pwgen -n 20 -s 1); sed -i -e \"s/{{ http_worker_id }}/${rand_id}/g\" {{ http_worker.config }}"
  when: autoscale
  tags:
    - http-worker-all
    - http-worker-cron

- name: Monitor http-worker by Monit
  monit:
    name: http-worker
    state: monitored
  with_items:
    - http-worker
  tags:
    - http-worker-all
    - http-worker-monit
    - http-worker-monit-1
