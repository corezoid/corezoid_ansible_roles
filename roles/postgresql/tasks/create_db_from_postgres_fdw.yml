- name: create extension postgres_fdw
  become: yes
  become_user: postgres
  shell: psql -p {{ db_main.port }} -U postgres {{ local_db }} -Atc "CREATE extension IF NOT EXISTS postgres_fdw;"
  tags:
    - pgsql-all
    - pgsql-deploy-schema

- name: create extension pgcrypto {{ local_db }}
  become: yes
  become_user: postgres
  shell: psql -p {{ db_main.port }} -U postgres {{ local_db }} -Atc "CREATE EXTENSION IF NOT EXISTS pgcrypto; with q As (select id, count(*) over (partition by conveyor_id, uuid) as c from nodes), q1 AS( select * from q WHERE c>1) UPDATE nodes SET uuid = gen_random_uuid() FROM q1 WHERE nodes.id = q1.id; with q As (select id, count(*) over (partition by dashboard_id, uuid) as c from charts), q1 AS (select * from q WHERE c>1) UPDATE charts SET uuid = gen_random_uuid() FROM q1 WHERE charts.id = q1.id;"
  tags:
    - pgsql-all
    - pgsql-deploy-schema

- name: GRANT postgres_fdw {{ local_db }}
  become: yes
  become_user: postgres
  shell: psql -p {{ db_main.port }} -U postgres {{ local_db }} -Atc "GRANT USAGE ON FOREIGN DATA WRAPPER postgres_fdw TO {{ db_main.user }}"
  tags:
    - pgsql-all
    - pgsql-deploy-schema
