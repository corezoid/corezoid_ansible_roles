# - set_fact:
#     local_db: "{{ item }}"

- name: set name for the main db sql file
  set_fact:
    local_db_schema: "{{ schema_path }}/{{ schema_path_suffix }}/signup_queries.sql"
    remote_db_schema: "/tmp/signup_queries.sql"
  when: local_db | regex_replace('[0-9]+$', '') == 'conveyor'
  tags:
    - debug-tunnel-var
    - pgsql-all
    - pgsql-deploy-signup-queries

- name: deploy schema files to remote host
  copy:
    src: "{{ local_db_schema }}"
    dest: "{{ remote_db_schema }}"
    owner: postgres
    group: postgres
    mode: 0644
  when:
    - not ssh_tunnel
    - not aws_rds
  tags:
    - debug-tunnel-var
    - pgsql-all
    - pgsql-deploy-signup-queries

# "{{ (ssh_tunnel) | ternary("{{ local_db_schema }}","{{ remote_db_schema }}") }}"
- name: set schema name for ssh_tunnel
  set_fact:
    db_schema: "{{ ssh_tunnel | ternary(local_db_schema,remote_db_schema) }}"
  tags:
    - debug-tunnel-var
    - pgsql-all
    - pgsql-deploy-signup-queries

- name: set schema name for ssh_tunnel
  set_fact:
    db_schema: "{{ aws_rds | ternary(local_db_schema,remote_db_schema) }}"
  tags:
    - debug-tunnel-var
    - pgsql-all
    - pgsql-deploy-signup-queries

- debug: msg={{ db_schema }}

- name: ensure tables exist in {{ local_db }}
  become: yes
  become_user: postgres
  shell: psql -p {{ db_main.port }} -U postgres {{ local_db }} -Atc "SELECT COUNT(1) FROM pg_stat_user_tables WHERE relname IN ('users', 'logins', 'user_groups', 'login_to_users', 'user_to_user_groups')"
  register: check_db_tables
  tags:
    - debug-tunnel-var
    - pgsql-all
    - pgsql-deploy-signup-queries

- debug: msg={{check_db_tables.stdout}}

- name: deploy db schema for {{ local_db }}
  become: yes
  become_user: postgres
  shell: psql -p {{ db_main.port }} -U postgres {{ local_db }} -f {{ db_schema }}
  when:
    - check_db_tables.stdout == "5"
  register: result
  tags:
    - debug-tunnel-var
    - pgsql-all
    - pgsql-deploy-signup-queries
